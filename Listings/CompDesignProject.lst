C51 COMPILER V9.56.0.0   COMPDESIGNPROJECT                                                 03/23/2017 14:11:04 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE COMPDESIGNPROJECT
OBJECT MODULE PLACED IN .\Objects\CompDesignProject.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE CompDesignProject.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\CompDesignProject.lst) TABS(2) OBJECT(.\Objects\CompDesignProject.obj)

line level    source

   1          /* Auth: Megan Bird
   2           * File: CompDesignProject.c
   3           * Course: CEEN-4330 – Microprocessor System Design – University of Nebraska-Lincoln
   4           * Lab: Project
   5           * Date: 3/14/2017
   6           * Desc: 8051 program with ROM, RAM, and I/O
   7           */
   8           
   9          #include <REGX55.H>
  10          #include <stdio.h>
  11          
  12          // P1
  13          sbit P1_0 = P1^0;
  14          sbit P1_1 = P1^1;
  15          
  16          // P3
  17          sbit P3_0 = P3^0;
  18          sbit P3_1 = P3^1;
  19          sbit P3_2 = P3^2;
  20          sbit P3_3 = P3^3;
  21          sbit P3_4 = P3^4;
  22          sbit P3_5 = P3^5;
  23          sbit P3_6 = P3^6;
  24          sbit P3_7 = P3^7;
  25          
  26          // Keypad
  27          sbit kCol1  = P1^7;
  28          sbit kCol2  = P1^6;
  29          sbit kCol3  = P1^5;
  30          sbit kCol4  = P1^4;
  31          sbit kRow1  = P1^3;
  32          sbit kRow2  = P1^2;
  33          sbit kRow3  = P1^1;
  34          sbit kRow4  = P1^0;
  35          sbit cs_keypad = P3^1;    // latch
  36          sbit oe_keypad = P3^2;
  37          
  38          // Seven-Segment Display
  39          sfr sevenSegPort = 0x90;
  40          sbit cs_sevenSeg = P3^0;  // latch
  41          
  42          // LCD
  43          sbit cs_lcd = P3^3;       // latch
  44          sbit rs_lcd = P3^4;       // reg select
  45          sbit e_lcd  = P3^5;       // enable
  46          // rw tied to ground to always enable read
  47          
  48          // ======================= prototypes =========================== //
  49          
  50          typedef unsigned char byte;
  51          
  52          struct keypad_data {
  53            unsigned char k1;
  54            unsigned char k2;
C51 COMPILER V9.56.0.0   COMPDESIGNPROJECT                                                 03/23/2017 14:11:04 PAGE 2   

  55            unsigned char k3;
  56            unsigned char k4;
  57            unsigned char k5;
  58            unsigned char k6;
  59            unsigned char k7;
  60            unsigned char k8;
  61            unsigned char k9;
  62            unsigned char k0;
  63            unsigned char kA;
  64            unsigned char kB;
  65            unsigned char kC;
  66            unsigned char kD;
  67            unsigned char kstar;
  68            unsigned char kpound;
  69          };
  70          
  71          void latchSevenSeg( void );
  72          void latchKeypad( void );
  73          void outputSevenSeg( char character );
  74          struct keypad_data getKeysPressed( void );
  75          void displayKeyPressed( struct keypad_data keypad );
  76          void ms_delay( unsigned msecs );
  77          
  78          // ======================== main ================================ //
  79          
  80          void main(void) {
  81   1        
  82   1        struct keypad_data keypad;
  83   1        
  84   1        while (1) {
  85   2          outputSevenSeg('1');
  86   2          ms_delay(1000);
  87   2          outputSevenSeg('5');
  88   2          ms_delay(1000);
  89   2        }
  90   1        
  91   1        while(1); // Stay off the streets
  92   1        
  93   1      } // end main()
*** WARNING C280 IN LINE 82 OF CompDesignProject.c: 'keypad': unreferenced local variable
  94          
  95          // ======================= functions ============================ //
  96          
  97          void latchSevenSeg( void ) {
  98   1        
  99   1        cs_sevenSeg = 1;
 100   1        cs_sevenSeg = 0;
 101   1        
 102   1      } // end latchSevenSeg()
 103          
 104          // -------------------------------------------------------------- //
 105          
 106          void latchKeypad( void ) {
 107   1        
 108   1        cs_keypad = 1;
 109   1        cs_keypad = 0;
 110   1        
 111   1      } // end latchKeypad()
 112          
 113          // -------------------------------------------------------------- //
 114          
 115          void outputSevenSeg( char character ) {
C51 COMPILER V9.56.0.0   COMPDESIGNPROJECT                                                 03/23/2017 14:11:04 PAGE 3   

 116   1        
 117   1        switch( character ) {
 118   2          case '0': sevenSegPort = ~0x3F; break;
 119   2          case '1': sevenSegPort = ~0x06; break;
 120   2          case '2': sevenSegPort = ~0x5B; break;
 121   2          case '3': sevenSegPort = ~0x4F; break;
 122   2          case '4': sevenSegPort = ~0x66; break;
 123   2          case '5': sevenSegPort = ~0x6D; break;
 124   2          case '6': sevenSegPort = ~0x7D; break;
 125   2          case '7': sevenSegPort = ~0x07; break;
 126   2          case '8': sevenSegPort = ~0x7F; break;
 127   2          case '9': sevenSegPort = ~0x67; break;
 128   2          case 'A': sevenSegPort = ~0x77; break;
 129   2          case 'b': sevenSegPort = ~0x7C; break;
 130   2          case 'C': sevenSegPort = ~0x39; break;
 131   2          case 'd': sevenSegPort = ~0x5E; break;
 132   2          case 'E': sevenSegPort = ~0x79; break;
 133   2          case 'F': sevenSegPort = ~0x71; break;
 134   2          case '-': sevenSegPort = 0xBF;  break;
 135   2          case '.': sevenSegPort = 0x7F;  break;
 136   2          case 'o': sevenSegPort = 0xFF;  break;  // off
 137   2          default:  sevenSegPort = 0xAA;          // invalid
 138   2        }
 139   1        
 140   1        latchSevenSeg();
 141   1        
 142   1      } // end outputSevenSeg()
 143          
 144          // -------------------------------------------------------------- //
 145          
 146          struct keypad_data getKeysPressed( void ) {
 147   1        
 148   1        struct keypad_data keypad;
 149   1        
 150   1        // enable keypad latch output
 151   1        oe_keypad = 0;
 152   1        
 153   1        // Set keypad columns as outputs & rows as inputs
 154   1        kCol1 = 0;
 155   1        kCol2 = 0;
 156   1        kCol3 = 0;
 157   1        kCol4 = 0;
 158   1        kRow1 = 1;
 159   1        kRow2 = 1;
 160   1        kRow3 = 1;
 161   1        kRow4 = 1;
 162   1        
 163   1        // scan by columns
 164   1      
 165   1        // column 1
 166   1        kCol1 = 0;
 167   1        kCol2 = 1;
 168   1        kCol3 = 1;
 169   1        kCol4 = 1;
 170   1        latchKeypad();
 171   1        
 172   1        if (kRow1 == 0) {
 173   2          keypad.k1 = 1;
 174   2        }
 175   1        else {
 176   2          keypad.k1 = 0;
 177   2        }
C51 COMPILER V9.56.0.0   COMPDESIGNPROJECT                                                 03/23/2017 14:11:04 PAGE 4   

 178   1        if (kRow2 == 0) {
 179   2          keypad.k4 = 1;
 180   2        }
 181   1        else {
 182   2          keypad.k4 = 0;
 183   2        }
 184   1        if (kRow3 == 0) {
 185   2          keypad.k7 = 1;
 186   2        }
 187   1        else {
 188   2          keypad.k7 = 0;
 189   2        }
 190   1        if (kRow4 == 0) {
 191   2          keypad.kstar = 1;
 192   2        }
 193   1        else {
 194   2          keypad.kstar = 0;
 195   2        }
 196   1        kCol1 = 1;
 197   1        
 198   1        // column 2
 199   1        kCol2 = 0;
 200   1        latchKeypad();
 201   1        
 202   1        if (kRow1 == 0) {
 203   2          keypad.k2 = 1;
 204   2        }
 205   1        else {
 206   2          keypad.k2 = 0;
 207   2        }
 208   1        if (kRow2 == 0) {
 209   2          keypad.k5 = 1;
 210   2        }
 211   1        else {
 212   2          keypad.k5 = 0;
 213   2        }
 214   1        if (kRow3 == 0) {
 215   2          keypad.k8 = 1;
 216   2        }
 217   1        else {
 218   2          keypad.k8 = 0;
 219   2        }
 220   1        if (kRow4 == 0) {
 221   2          keypad.k0 = 1;
 222   2        }
 223   1        else {
 224   2          keypad.k0 = 0;
 225   2        }
 226   1        kCol2 = 1;
 227   1        
 228   1        // column 3
 229   1        kCol3 = 0;
 230   1        latchKeypad();
 231   1        
 232   1        if (kRow1 == 0) {
 233   2          keypad.k3 = 1;
 234   2        }
 235   1        else {
 236   2          keypad.k3 = 0;
 237   2        }
 238   1        if (kRow2 == 0) {
 239   2          keypad.k6 = 1;
C51 COMPILER V9.56.0.0   COMPDESIGNPROJECT                                                 03/23/2017 14:11:04 PAGE 5   

 240   2        }
 241   1        else {
 242   2          keypad.k6 = 0;
 243   2        }
 244   1        if (kRow3 == 0) {
 245   2          keypad.k9 = 1;
 246   2        }
 247   1        else {
 248   2          keypad.k9 = 0;
 249   2        }
 250   1        if (kRow4 == 0) {
 251   2          keypad.kpound = 1;
 252   2        }
 253   1        else {
 254   2          keypad.kpound = 0;
 255   2        }
 256   1        kCol3 = 1;
 257   1        
 258   1        // column 4
 259   1        kCol4 = 0;
 260   1        latchKeypad();
 261   1        
 262   1        if (kRow1 == 0) {
 263   2          keypad.kA = 1;
 264   2        }
 265   1        else {
 266   2          keypad.kA = 0;
 267   2        }
 268   1        if (kRow2 == 0) {
 269   2          keypad.kB = 1;
 270   2        }
 271   1        else {
 272   2          keypad.kB = 0;
 273   2        }
 274   1        if (kRow3 == 0) {
 275   2          keypad.kC = 1;
 276   2        }
 277   1        else {
 278   2          keypad.kC = 0;
 279   2        }
 280   1        if (kRow4 == 0) {
 281   2          keypad.kD = 1;
 282   2        }
 283   1        else {
 284   2          keypad.kD = 0;
 285   2        }
 286   1        kCol4 = 1;
 287   1        latchKeypad();
 288   1        
 289   1        // disable keypad latch output
 290   1        oe_keypad = 1;
 291   1        
 292   1        return keypad; 
 293   1        
 294   1      } // end getKeysPressed()
 295          
 296          // -------------------------------------------------------------- //
 297          
 298          void displayKeyPressed( struct keypad_data keypad ) {
 299   1        
 300   1        if ( keypad.k1 == 1 ) {
 301   2          outputSevenSeg('1');
C51 COMPILER V9.56.0.0   COMPDESIGNPROJECT                                                 03/23/2017 14:11:04 PAGE 6   

 302   2        }
 303   1        else if ( keypad.k2 == 1 ) {
 304   2          outputSevenSeg('2');
 305   2        }
 306   1        else if ( keypad.k3 == 1 ) {
 307   2          outputSevenSeg('3');
 308   2        }
 309   1        else if ( keypad.k4 == 1 ) {
 310   2          outputSevenSeg('4');
 311   2        }
 312   1        else if ( keypad.k5 == 1 ) {
 313   2          outputSevenSeg('5');
 314   2        }
 315   1        else if ( keypad.k6 == 1 ) {
 316   2          outputSevenSeg('6');
 317   2        }
 318   1        else if ( keypad.k7 == 1 ) {
 319   2          outputSevenSeg('7');
 320   2        }
 321   1        else if ( keypad.k8 == 1 ) {
 322   2          outputSevenSeg('8');
 323   2        }
 324   1        else if ( keypad.k9 == 1 ) {
 325   2          outputSevenSeg('9');
 326   2        }
 327   1        else if ( keypad.kA == 1 ) {
 328   2          outputSevenSeg('A');
 329   2        }
 330   1        else if ( keypad.k0 == 1 ) {
 331   2          outputSevenSeg('0');
 332   2        }
 333   1        else if ( keypad.kB == 1 ) {
 334   2          outputSevenSeg('b');
 335   2        }
 336   1        else if ( keypad.kC == 1 ) {
 337   2          outputSevenSeg('C');
 338   2        }
 339   1        else if ( keypad.kD == 1 ) {
 340   2          outputSevenSeg('d');
 341   2        }
 342   1        else if ( keypad.kstar == 1 ) {
 343   2          outputSevenSeg('.');
 344   2        }
 345   1        else if ( keypad.kpound == 1 ) {
 346   2          outputSevenSeg('-');
 347   2        }
 348   1        else {
 349   2          outputSevenSeg('o');
 350   2        }
 351   1        
 352   1      } // end displayKeyPressed()
 353            
 354          // -------------------------------------------------------------- //
 355          
 356          void ms_delay( unsigned msecs ) {
 357   1        
 358   1        unsigned i;
 359   1        unsigned char j;
 360   1        
 361   1        msecs = msecs * 3.23;
 362   1        
 363   1        for(i=0;i<msecs;i++){
C51 COMPILER V9.56.0.0   COMPDESIGNPROJECT                                                 03/23/2017 14:11:04 PAGE 7   

 364   2          for(j=0;j<100;j++);
 365   2        }
 366   1        
 367   1      } // end msDelay()
 368          
 369          // -------------------------------------------------------------- //
 370          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    640    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      48
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
